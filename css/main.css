@charset "utf-8";



@font-face {
    font-family: "Roboto Light";
    src: url(../res/fonts/Roboto-Light.ttf) format("truetype");
}

@font-face {
    font-family: "Roboto Medium";
    src: url(../res/fonts/Roboto-Medium.ttf) format("truetype");
}

@font-face {
    font-family: "OpenSans Regular";
    src: url(../res/fonts/OpenSans-Regular.ttf) format("truetype");
}

@font-face {
    font-family: "OpenSans Light";
    src: url(../res/fonts/OpenSans-Light.ttf) format("truetype");
}

@font-face {
    font-family: "OpenSans SemiBold";
    src: url(../res/fonts/OpenSans-SemiBold.ttf) format("truetype");
}



html {
    position: fixed;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;

    font-size: 16px;
    font-family: "OpenSans Regular", sans-serif;
}

body {
    width: 100%;
    height: 100%;

    --main-color: hsl(209, 100%, 56%);
    --disabled-control-color: hsl(0, 0%, 65%);
    --disabled-component-color: #0003;
    --placeholder-color: hsl(0, 0%, 50%);

    --button-height: 36px;
    --button-font: 1em "OpenSans Regular", sans-serif;
    --button-color: hsl(209, 100%, 40%);

    --secondary-control-color: hsl(0, 0%, 30%);
    --secondary-color-hover: rgba(0, 0, 0, .08);
    --secondary-color-active: rgba(0, 0, 0, .2);

    --secondary-watch-color: #0009;

    --running-color: hsl(0, 80%, 45%);
    --running-pause-color: hsl(120, 100%, 35%);

    --comp-shadow:
        0 0 5px 3px rgba(0,0,0,.1),
        0 5px 15px 10px rgba(0,0,0,.15);

    --comp-border-radius: 3px;
    --comp-default-padding: 20px;
    --comp-default-margin: 20px;
    --comp-default-width: 400px;
}


/* --- Screens --- */

.initial-screen {
    /* Position */
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;

    /* Background */
    background:
        linear-gradient(#FFF6, #FFF6),
        linear-gradient(#000, #000),
        center / cover url(../res/images/initial-screen-background.jpg);

    background-blend-mode: normal, saturation, normal;

    /* Content */
    display: flex;
    justify-content: center;
    align-items: center;

    padding-left: calc(env(safe-area-inset-left, 10px) - 10px);
    padding-right: calc(env(safe-area-inset-right, 10px) - 10px);
}

.main-screen {
    /* Position */
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;

    /* Content */
    display: flex;
    flex-direction: column;
}

/* Temporary disabling */
.initial-screen {
    display: none;
}

.main-screen {
    /*display: none;*/
}


/* --- Vertical alignment --- */

.vertical-container {
    width: var(--comp-default-width);
    height: calc(100% - 2 * var(--comp-default-margin));
    margin: 0 var(--comp-default-margin);
    flex-shrink: 1;

    /* Content */
    display: flex;
    flex-direction: column;
    justify-content: center;
}


/* --- No Content Display --- */

.no-content-display {
    margin: 1em;
}

.no-content-display:not(:only-child) {
    display: none;
}

.no-content-display p {
    color: #0006;
    text-align: center;
}

.no-content-display p:not(:last-child) {
    margin-bottom: .6em;
}

.no-content-display strong {
    font-weight: normal;
    color: #000B;
}


/* --- Control Button --- */
/* General styles for buttons */

.control-button {
    height: var(--button-height);

    border: 1px solid var(--button-color);
    border-radius: var(--comp-border-radius);
    background-color: transparent;

    font: var(--button-font);
    color: var(--button-color);
}

.control-button:disabled {
    color: var(--disabled-control-color);
    border-color: var(--disabled-control-color);
}


/* --- Close Button --- */

.close-button {
    position: relative;

    width: 26px;
    height: 26px;

    border-radius: var(--comp-border-radius);

    /* Removing default button styles */
    border: none;
    background: none;
}

.close-button::before, .close-button::after {
    display: block;
    content: "";

    /* Position */
    position: absolute;
    top: 50%;
    left: 50%;

    /* Dimensions */
    width: 80%;
    border-top: 2px solid var(--secondary-control-color);
}

.close-button::before {
    transform: translate(-50%, -50%) rotate(45deg);
}

.close-button::after {
    transform: translate(-50%, -50%) rotate(-45deg);
}

.close-button:hover {
    background-color: var(--secondary-color-hover);
}

.close-button:active {
    background-color: var(--secondary-color-active);
}


/* --- Handle --- */

.handle {
    /* Size */
    height: 12px;
    width: 19px;

    /* Content */
    display: flex;
    flex-direction: column;
    justify-content: space-between;

    --border: 2px solid var(--secondary-control-color);
}

.handle::before, .handle::after {
    border-top: var(--border);
    content: "";
}

.handle > :only-child {
    border-top: var(--border);
}


/* --- General Input --- */

.text-input {
    border: 1px solid transparent;
    border-radius: var(--comp-border-radius);
    padding: 3px 5px;

    background-color: transparent;

    font: 1em "OpenSans Regular", sans-serif;
    text-overflow: ellipsis;

    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
}

.text-input::placeholder {
    color: var(--placeholder-color);
    font: 1em "OpenSans Regular", sans-serif;
    opacity: 1; /* Firefox */
}

.text-input:focus {
    outline: none;
    border-color: var(--main-color);
    background-color: white;
}


/* --- General Notes --- */
/* Requires text-input */

.notes {
    height: calc(8px + 3 * 1.5em);
    background-color: rgba(0,0,0,.04);
    resize: none;

    padding-left: 6px;
    padding-right: 6px;

    font-size: .8em;
    line-height: 1.5;
}

.notes:placeholder {
    line-height: 1.5;
}


/* --- Overlay Disabling --- */
/* Creates pseudo-element overlay so component can't be accessed
    during inproper times (i.e. during animations) */

.overlay-disabling::before {
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: 1;

    border-radius: var(--comp-border-radius);
    content: "";
}

.overlay-disabling.enable-access::before {
    display: none;
}

    /* Visible disabling with intro/outro animaton */
.overlay-disabling.disable-visible-display::before {
    display: block;
    background-color: var(--disabled-component-color);
    animation: disabling-display var(--disable-anim-duration, 0s) ease-in-out forwards;
}

    @keyframes disabling-display {
        from {
            opacity: 0;
        }
        to {
            opacity: 1;
        }
    }

.overlay-disabling.disable-visible-hide::before {
    display: block;
    background-color: var(--disabled-component-color);
    animation: disabling-hide var(--disable-anim-duration, 0s) ease-in-out forwards;
}

    @keyframes disabling-hide {
        from {
            opacity: 1;
        }
        to {
            opacity: 0;
        }
    }


/* --- Overflow Shadows --- */
/* Shadows to be triggered when overflowing in that direction */

.overflow-shadow-top {
    box-shadow:
        inset 0 10px 10px -10px #0002,
        inset 0 6px 3px -6px #0004;
}

.overflow-shadow-bottom {
    box-shadow:
        inset 0 -10px 10px -10px #0002,
        inset 0 -6px 3px -6px #0004;
}

.overflow-shadow-both {
    box-shadow:
        inset 0 10px 10px -10px #0002,
        inset 0 6px 3px -6px #0004,
        inset 0 -10px 10px -10px #0002,
        inset 0 -6px 3px -6px #0004;
}


/* --- Fade In/Out Animations --- */

@keyframes fade-in {
    from {
        top: var(--from);
    }
    70% {
        opacity: 1;
    }
    to {
        top: 0;
        opacity: 1;
    }
}

@keyframes fade-out {
    from {
        top: 0;
    }
    to {
        top: 50px;
        opacity: 0;
    }
}
